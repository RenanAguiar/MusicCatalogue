@model MusicCatalogue.Models.Track

@{
    ViewBag.Title = "Edit";
}

<div class="modal-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h2>Edit Track</h2>


@using (Ajax.BeginForm("Edit", new AjaxOptions()
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "dane"
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)
                        @Html.HiddenFor(model => model.albumID)

                        <div class="form-group">
                            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.trackNumber, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.trackNumber, new { htmlAttributes = new { @type = "text", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.trackNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.duration, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                @Html.EditorFor(model => model.duration, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.duration, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group pull-right">
                            
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                <button type="button" onclick="submitForm();" class="btn btn-success">Save</button>
                            
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function submitForm() {
        var token = $('input[name="__RequestVerificationToken"]').val();
        var formData = $('#form0').serialize();
        $.extend(formData, { '__RequestVerificationToken': token });
        $.ajax({
         type: 'POST',
         url: '@Url.Action("Edit", "Track")',
            data: formData,
         beforeSend: function () {

            },
            complete: function () {

            },
            success: function (result) {
                //console.log(result);
               

                
                if (result.success==true) {
                    console.log("ok");
                   // $('#frmConstruction').removeClass('has-error');
                    // alert("Information stored!");
                   // $('#tabConstructionInformation .containerMessages').addClass('alert-success');
                   // $('#tabConstructionInformation .containerMessages .resultMessage').append("Report Details Stored!");
                } else {
                    var errors = result.errors;
                    displayValidationErrors(errors);
                }

            }
        });
    }


    function displayValidationErrors(errors) {
        $.each(errors, function (idx, item) {
            $('*[data-valmsg-for="' + item.field + '"]').html(item.errorMessage);
        });        
    }
</script>