@model MusicCatalogue.Models.Album

@{
    ViewBag.Title = "Create";
   
}

<div class="modal-body">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h2>New Album</h2>
                <hr />

@using (Ajax.BeginForm("Create", new AjaxOptions()
{
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "dane"
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.artistID)
                    <div class="form-horizontal">
                        <h4>Album @Html.Raw(ViewBag.ida)</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.genre, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.EnumDropDownListFor(model => model.genre, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.genre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        
                        
                        <div>f
                   
                            
                            <input type="text" name="Track[1].title" value="Beer" />
                            <input type="text" name="Track[2].trackNumber" value="2" />

                           
                            <input type="text" name="Track[1].title" value="Chips" />
                            <input type="text" name="Track[2].trackNumber" value="33" />


                        </div>
                        
                        
                        
                        <div class="form-group pull-right">
                            <button type="button" class="btn btn-danger closeModal" data-dismiss="modal">Cancel</button>
                            <button type="button" onclick="submitForm();" class="btn btn-success">Save</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    function submitForm() {
        var token = $('input[name="__RequestVerificationToken"]').val();
        var formData = $('#form0').serialize();
        $.extend(formData, { '__RequestVerificationToken': token });
        $.ajax({
         type: 'POST',
         url: '@Url.Action("Create", "Album")',
            data: formData,
         beforeSend: function () {
            },
            complete: function () {
            },
            success: function (result) {
                if (result.success == true) {
                  //  $('#track_' + result.data.ID + ' .trackTrackNumber').html(result.data.trackNumber);
                 //   $('#track_' + result.data.ID + ' .trackTitle').html(result.data.title);
                    //   $('#track_' + result.data.ID + ' .trackTime').html(result.data.time);
                    a = getAlbums(result.data);
                    $("#listAlbums").html(a);
                    $("#modal-addAlbum .closeModal").click();
                } else {
                    var errors = result.errors;
                    displayValidationErrors(errors);
                }
            }
        });
    }


    function displayValidationErrors(errors) {
        $.each(errors, function (idx, item) {
            $('*[data-valmsg-for="' + item.field + '"]').html(item.errorMessage);
        });
    }

</script>
